# This configuration file is based on the default configuration file in grafana/otel-lgtm.
# Ref. https://github.com/grafana/docker-otel-lgtm/blob/main/docker/otelcol-config.yaml
receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318
        cors:
          allowed_origins:
            - http://*
  prometheus/collector:
    config:
      scrape_configs:
        - job_name: "opentelemetry-collector"
          scrape_interval: 1s
          static_configs:
            - targets: ["127.0.0.1:8888"]

extensions:
  health_check:
    endpoint: 0.0.0.0:13133
    path: "/ready"

# Refs.
# https://github.com/open-telemetry/opentelemetry-collector/blob/main/connector/README.md
# Why use a Connector?: https://opentelemetry.io/docs/collector/building/connector/#why-use-a-connector
connectors:
  # Ref. https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/connector/signaltometricsconnector
  signaltometrics/php_fpm_slow_log:
    logs:
      # Generate count metrics based on PHP-FPM slow logs
      - name: php_fpm_slow_log_count
        description: PHP-FPM slow logs count.
        conditions:
          - log.attributes["topic"] == "php-fpm.slow"
        attributes:
          - key: script_filename
        sum:
          value: "1"

processors:
  batch:
  # Ref. https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/processor/transformprocessor
  transform/php_fpm_slow_log:
    error_mode: ignore
    log_statements:
      - conditions:
        - log.attributes["topic"] == "php-fpm.slow"
      - statements:
          # To use the information as attributes of metrics generated by the SignalToMetricsConnector,
          # it is necessary to set it in log.attributes and pass it.
          # Ref. Log Context: https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/pkg/ottl/contexts/ottllog/README.md
          - set(log.attributes["script_filename"], log.body["script_filename"])

  # Ref. https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/processor/transformprocessor
  transform/php_fpm_slow_log_metrics:
    error_mode: ignore
    metric_statements:
      - conditions:
        - metric.name == "php_fpm_slow_log_count"
      - statements:
        # Adjust metrics generated by SignalToMetricsConnector to comply with Prometheus specifications
        # Ref. Metric Context: https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/pkg/ottl/contexts/ottlmetric/README.md
        - set(metric.aggregation_temporality, AGGREGATION_TEMPORALITY_CUMULATIVE)
        - set(metric.is_monotonic, true)

exporters:
  otlphttp/metrics:
    endpoint: http://127.0.0.1:9090/api/v1/otlp
    tls:
      insecure: true
  otlphttp/traces:
    endpoint: http://127.0.0.1:4418
    tls:
      insecure: true
  otlphttp/logs:
    endpoint: http://127.0.0.1:3100/otlp
    tls:
      insecure: true
  otlp/profiles:
    endpoint: http://127.0.0.1:4040
    tls:
      insecure: true
  debug/metrics:
    verbosity: detailed
  debug/traces:
    verbosity: detailed
  debug/logs:
    verbosity: detailed

service:
  extensions: [health_check]
  pipelines:
    traces:
      receivers: [otlp]
      processors: [batch]
      exporters: [otlphttp/traces]
      #exporters: [otlphttp/traces,debug/traces]
    metrics:
      receivers: [otlp, prometheus/collector, signaltometrics/php_fpm_slow_log]
      processors: [batch, transform/php_fpm_slow_log_metrics]
      exporters: [otlphttp/metrics]
      #exporters: [otlphttp/metrics,debug/metrics]
    logs:
      receivers: [otlp]
      processors: [batch, transform/php_fpm_slow_log]
      exporters: [otlphttp/logs, signaltometrics/php_fpm_slow_log]
      #exporters: [otlphttp/logs,debug/logs]]
    profiles:
      receivers: [otlp]
      exporters: [otlp/profiles]
